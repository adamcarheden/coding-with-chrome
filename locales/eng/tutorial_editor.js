/**
 * @fileoverview Translation file for the Setting screen (English).
 *
 * @license Copyright 2019 The Coding with Chrome Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author carheden@google.com (Adam Carheden)
 */
/* eslint-disable max-len */
Locales['eng']['TUTORIAL_EDITOR'] = {
  'ADD_ATTACHMENT': 'Add Image/Video',
  'ADD_STEP': 'Add New Step',
  'ADD_YOUTUBE': 'Add YouTube',
  'CLOSE': 'Close Without Saving',
  'DESCRIPTION': 'Description',
  'HELP_EXAMPLE_CODE': `You may provide example code for each step of a lesson.
    Example code will be automatically loaded into the editor when the step is
    activated if the editor is either empty or matches the code of the previous
    step. The student can re-load the example code into the editor at any time
    via a button click.`.replace(/\n/g, ' '),
  'HELP_VALIDATION': `Validation allows you to give students feedback. It runs
    every time the student changes the editor. You can either match the text
    output of the student's code or run a custom JavaScript function. When
    validation succeeds, the student sees a message at the bottom of the step.`
    .replace(/\n/g, ' '),
  'HELP_MATCH_TEXT': `Text matching validation compares the text output of the
    student's code to text you provide. In blockly, text output is text written
    by the Command/write() and Command/writeLine() blocks. In JavaScript, text
    output is text written by the document.write() function or any text-based
    DOM elements the code adds to the page. Text matching isn't supported for
    python at this time.`.replace(/\n/g, ' '),
  'HELP_RUN_CODE': `You can validate the student's code by running your own code
    in the context of the preview window. Your code can either inspect the
    student's code directly, inspect the DOM generated by the student's code or
    both. It should return a JavaScript object with the keys 'message' and
    'solved'. 'message' is the text to display. 'solved' determines if the
    message is displayed in a green box, indicating the student's code is
    correct, or a red box, indicating the code is not yet correct.`
    .replace(/\n/g, ' '), 'EXAMPLE_CODE': 'Example Code',
  'LOAD_VALIDATION_TEMPLATE': 'Load Validation Template',
  'MATCH_TEXT': 'Match Text',
  'MEDIA': 'Media',
  'MOVE_STEP_UP': 'Move Step Up',
  'MOVE_STEP_DOWN': 'Move Step Down',
  'REMOVE_STEP': 'Remove Step',
  'RUN_CODE': 'Run Code',
  'SAVE': 'Save and Close',
  'TITLE': 'Title',
  'VALIDATION': 'Validation',
  'SUCCESS_MESSAGE': 'Message On Success',
  'SUCCESS_MESSAGE_EXAMPLE': 'Great Job!',
  'STEP': 'Step',
};
